import{c as A}from"./chunk-TUX3VW3M.js";import{c as T,e as o}from"./chunk-AG3FRLJI.js";import{O as _,j as m,m as f}from"./chunk-6ZKZZP75.js";import{a as I,b as v,f as a}from"./chunk-EQDQRRRY.js";var w=function(e){return e[e.FALSE=0]="FALSE",e[e.TRUE=1]="TRUE",e}(w||{});function C(e){return e?w.TRUE:w.FALSE}function V(e){return!!e}function x(e){return e.reduce((p,R)=>p+R,0)}function B(e){return e.length?e.reduce((p,R)=>p+R,0)/e.length:0}var i=function(e){return e.OLDEST_FIRST="oldest_first",e.NEWEST_FIRST="newest_first",e.HIGHEST_SUM="highest_sum",e.LOWEST_SUM="lowest_sum",e.HIGHEST_AVERAGE="highest_average",e.LOWEST_AVERAGE="lowest_average",e}(i||{}),W=new Map([[i.NEWEST_FIRST,"session.sortOptions.newestFirst"],[i.OLDEST_FIRST,"session.sortOptions.oldestFirst"],[i.HIGHEST_SUM,"session.sortOptions.highestTotalFirst"],[i.LOWEST_SUM,"session.sortOptions.lowestTotalFirst"],[i.HIGHEST_AVERAGE,"session.sortOptions.highestAverageFirst"],[i.LOWEST_AVERAGE,"session.sortOptions.lowestAverageFirst"]]);var P=(()=>{let p=class p{constructor(){this.sessions$=m(T(()=>o.sessions.orderBy("date").reverse().toArray()))}getFilteredSessions(t){return m(T(()=>a(this,null,function*(){let s=[];switch(t.sortBy){case i.NEWEST_FIRST:{s=yield o.sessions.orderBy("date").reverse().toArray();break}case i.OLDEST_FIRST:{s=yield o.sessions.orderBy("date").toArray();break}case i.HIGHEST_SUM:case i.LOWEST_SUM:case i.HIGHEST_AVERAGE:case i.LOWEST_AVERAGE:{s=yield o.sessions.toArray();let r=new Map;for(let d of s){let u=0,c=0,S=0,l=yield this.getAllShotsFromValidRoundsBySessionId(d.id),g=l.map(E=>E.value);u=x(g),S=B(g),c=l.map(E=>E.isX).filter(E=>!!E).length,r.set(d.id,{scoreTotal:u,xCount:c,avg:S})}t.sortBy===i.HIGHEST_SUM?s=s.sort((d,u)=>{let c=r.get(d.id).scoreTotal,S=r.get(d.id).xCount,l=r.get(u.id).scoreTotal,g=r.get(u.id).xCount;return c===l?g-S:l-c}):t.sortBy===i.LOWEST_SUM?s=s.sort((d,u)=>{let c=r.get(d.id).scoreTotal,S=r.get(d.id).xCount,l=r.get(u.id).scoreTotal,g=r.get(u.id).xCount;return c===l?S-g:c-l}):t.sortBy===i.HIGHEST_AVERAGE?s=s.sort((d,u)=>{let c=r.get(d.id).avg,S=r.get(d.id).xCount,l=r.get(u.id).avg,g=r.get(u.id).xCount;return c===l?g-S:l-c}):t.sortBy===i.LOWEST_AVERAGE&&(s=s.sort((d,u)=>{let c=r.get(d.id).avg,S=r.get(d.id).xCount,l=r.get(u.id).avg,g=r.get(u.id).xCount;return c===l?S-g:c-l}));break}default:s=yield o.sessions.toArray();break}let n=t.shootingType;A(n)&&(s=s.filter(r=>r.shootingType===n));let h=t.targetFace;A(h)&&(s=s.filter(r=>r.targetFace===h));let y=t.distance;A(y)&&y>0&&(s=s.filter(r=>r.distance===y));let F=t.bowType;return A(F)&&(s=s.filter(r=>r.bowType===F)),s})))}getAverageScoreBySessionID$(t){return m(T(()=>this.getAllShotsFromValidRoundsBySessionId(t))).pipe(f(s=>s.map(n=>n.value)),f(s=>B(s).toFixed(2)))}getTotalScoreBySessionID$(t){return m(T(()=>this.getAllShotsFromValidRoundsBySessionId(t))).pipe(f(s=>x(s.map(n=>n.value))))}getXCountBySessionID$(t){return m(T(()=>this.getAllShotsFromValidRoundsBySessionId(t))).pipe(f(s=>s.map(n=>n.isX).filter(n=>!!n)),f(s=>s.length))}addSession(t){return a(this,null,function*(){return yield o.sessions.add(v(I({},t),{date:new Date().toISOString(),locked:w.FALSE}))})}deleteSession(t){return a(this,null,function*(){return yield o.transaction("rw",o.sessions,o.rounds,o.shots,()=>a(this,null,function*(){let s=yield this.getRoundsBySessionId(t);for(let n of s){let h=yield this.getShotsByRoundId(n.id);yield o.shots.bulkDelete(h.map(y=>y.id))}yield o.rounds.bulkDelete(s.map(n=>n.id)),yield o.sessions.delete(t)}))})}getSessionById(t){return a(this,null,function*(){return yield o.sessions.get(t)})}updateSession(t,s){return a(this,null,function*(){return yield o.sessions.update(t,I({},s))})}getLatestSession(){return a(this,null,function*(){return yield o.sessions.orderBy("date").reverse().first()})}getRoundsBySessionId(t){return a(this,null,function*(){return yield o.rounds.where({sessionId:t}).toArray()})}getRoundsCountBySessionId(t){return a(this,null,function*(){return yield o.rounds.where({sessionId:t}).count()})}addRound(t){return a(this,null,function*(){return o.rounds.add(t)})}updateRound(t,s){return a(this,null,function*(){return yield o.rounds.update(t,I({},s))})}deleteRound(t){return a(this,null,function*(){return yield o.transaction("rw",o.rounds,o.shots,()=>a(this,null,function*(){let s=yield this.getShotsByRoundId(t);yield o.shots.bulkDelete(s.map(n=>n.id)),yield o.rounds.delete(t)}))})}getShotsByRoundId(t){return a(this,null,function*(){return yield o.shots.where({roundId:t}).toArray()})}getAllShotsBySessionId(t){return a(this,null,function*(){let s=yield this.getRoundsBySessionId(t),n=[];for(let h of s){let y=yield this.getShotsByRoundId(h.id);n.push(...y)}return n})}addShot(t){return a(this,null,function*(){return yield o.shots.add(t)})}addMultipleShots(t){return a(this,null,function*(){return yield o.shots.bulkAdd(t)})}deleteShot(t){return a(this,null,function*(){return yield o.shots.delete(t)})}updateShot(t,s){return a(this,null,function*(){return yield o.shots.update(t,s)})}addShotsForRound(t,s){return a(this,null,function*(){o.transaction("rw",o.sessions,o.rounds,o.shots,()=>a(this,null,function*(){yield o.shots.where({roundId:t}).delete(),yield o.shots.bulkAdd(s);let n=yield o.rounds.get(t),h=yield o.sessions.where({id:n.sessionId}).first();yield this.updateRound(t,{countsTowardsStats:C(s.length===h.arrowCount)})}))})}getAllShotsFromValidRoundsBySessionId(t){return a(this,null,function*(){let s=yield o.rounds.where({sessionId:t,countsTowardsStats:w.TRUE}).toArray(),n=[];for(let h of s){let y=yield this.getShotsByRoundId(h.id);n.push(...y)}return n})}};p.\u0275fac=function(s){return new(s||p)},p.\u0275prov=_({token:p,factory:p.\u0275fac,providedIn:"root"});let e=p;return e})();export{C as a,V as b,x as c,B as d,i as e,W as f,P as g};
