import{t as A}from"./chunk-AUAKSQ24.js";import{a as w,c as o}from"./chunk-F2UQBV34.js";import{N as _,j as y,m as f}from"./chunk-5K3J527P.js";import{a as E,b as F,f as n}from"./chunk-EQDQRRRY.js";var m=function(e){return e[e.FALSE=0]="FALSE",e[e.TRUE=1]="TRUE",e}(m||{});function B(e){return e?m.TRUE:m.FALSE}function k(e){return!!e}function I(e){return e.reduce((R,t)=>R+t,0)}function x(e){return e.length?e.reduce((R,t)=>R+t,0)/e.length:0}var i=function(e){return e.OLDEST_FIRST="oldest_first",e.NEWEST_FIRST="newest_first",e.HIGHEST_SUM="highest_sum",e.LOWEST_SUM="lowest_sum",e.HIGHEST_AVERAGE="highest_average",e.LOWEST_AVERAGE="lowest_average",e}(i||{}),H=new Map([[i.NEWEST_FIRST,"session.sortOptions.newestFirst"],[i.OLDEST_FIRST,"session.sortOptions.oldestFirst"],[i.HIGHEST_SUM,"session.sortOptions.highestTotalFirst"],[i.LOWEST_SUM,"session.sortOptions.lowestTotalFirst"],[i.HIGHEST_AVERAGE,"session.sortOptions.highestAverageFirst"],[i.LOWEST_AVERAGE,"session.sortOptions.lowestAverageFirst"]]);var Z=(()=>{class e{constructor(){this.sessions$=y(w(()=>o.sessions.orderBy("date").reverse().toArray()))}getFilteredSessions(t){return y(w(()=>n(this,null,function*(){let s=[];switch(t.sortBy){case i.NEWEST_FIRST:{s=yield o.sessions.orderBy("date").reverse().toArray();break}case i.OLDEST_FIRST:{s=yield o.sessions.orderBy("date").toArray();break}case i.HIGHEST_SUM:case i.LOWEST_SUM:case i.HIGHEST_AVERAGE:case i.LOWEST_AVERAGE:{s=yield o.sessions.toArray();let a=new Map;for(let d of s){let u=0,c=0,p=0,l=yield this.getAllShotsFromValidRoundsBySessionId(d.id),h=l.map(T=>T.value);u=I(h),p=x(h),c=l.map(T=>T.isX).filter(T=>!!T).length,a.set(d.id,{scoreTotal:u,xCount:c,avg:p})}t.sortBy===i.HIGHEST_SUM?s=s.sort((d,u)=>{let c=a.get(d.id).scoreTotal,p=a.get(d.id).xCount,l=a.get(u.id).scoreTotal,h=a.get(u.id).xCount;return c===l?h-p:l-c}):t.sortBy===i.LOWEST_SUM?s=s.sort((d,u)=>{let c=a.get(d.id).scoreTotal,p=a.get(d.id).xCount,l=a.get(u.id).scoreTotal,h=a.get(u.id).xCount;return c===l?p-h:c-l}):t.sortBy===i.HIGHEST_AVERAGE?s=s.sort((d,u)=>{let c=a.get(d.id).avg,p=a.get(d.id).xCount,l=a.get(u.id).avg,h=a.get(u.id).xCount;return c===l?h-p:l-c}):t.sortBy===i.LOWEST_AVERAGE&&(s=s.sort((d,u)=>{let c=a.get(d.id).avg,p=a.get(d.id).xCount,l=a.get(u.id).avg,h=a.get(u.id).xCount;return c===l?p-h:c-l}));break}default:s=yield o.sessions.toArray();break}let r=t.shootingType;A(r)&&(s=s.filter(a=>a.shootingType===r));let S=t.targetFace;A(S)&&(s=s.filter(a=>a.targetFace===S));let g=t.distance;return A(g)&&g>0&&(s=s.filter(a=>a.distance===g)),s})))}getAverageScoreBySessionID$(t){return y(w(()=>this.getAllShotsFromValidRoundsBySessionId(t))).pipe(f(s=>s.map(r=>r.value)),f(s=>x(s).toFixed(2)))}getTotalScoreBySessionID$(t){return y(w(()=>this.getAllShotsFromValidRoundsBySessionId(t))).pipe(f(s=>I(s.map(r=>r.value))))}getXCountBySessionID$(t){return y(w(()=>this.getAllShotsFromValidRoundsBySessionId(t))).pipe(f(s=>s.map(r=>r.isX).filter(r=>!!r)),f(s=>s.length))}addSession(t){return n(this,null,function*(){return yield o.sessions.add(F(E({},t),{date:new Date().toISOString(),locked:m.FALSE}))})}deleteSession(t){return n(this,null,function*(){return yield o.transaction("rw",o.sessions,o.rounds,o.shots,()=>n(this,null,function*(){let s=yield this.getRoundsBySessionId(t);for(let r of s){let S=yield this.getShotsByRoundId(r.id);yield o.shots.bulkDelete(S.map(g=>g.id))}yield o.rounds.bulkDelete(s.map(r=>r.id)),yield o.sessions.delete(t)}))})}getSessionById(t){return n(this,null,function*(){return yield o.sessions.get(t)})}updateSession(t,s){return n(this,null,function*(){return yield o.sessions.update(t,E({},s))})}getLatestSession(){return n(this,null,function*(){return yield o.sessions.orderBy("date").reverse().first()})}getRoundsBySessionId(t){return n(this,null,function*(){return yield o.rounds.where({sessionId:t}).toArray()})}getRoundsCountBySessionId(t){return n(this,null,function*(){return yield o.rounds.where({sessionId:t}).count()})}addRound(t){return n(this,null,function*(){return o.rounds.add(t)})}updateRound(t,s){return n(this,null,function*(){return yield o.rounds.update(t,E({},s))})}deleteRound(t){return n(this,null,function*(){return yield o.transaction("rw",o.rounds,o.shots,()=>n(this,null,function*(){let s=yield this.getShotsByRoundId(t);yield o.shots.bulkDelete(s.map(r=>r.id)),yield o.rounds.delete(t)}))})}getShotsByRoundId(t){return n(this,null,function*(){return yield o.shots.where({roundId:t}).toArray()})}getAllShotsBySessionId(t){return n(this,null,function*(){let s=yield this.getRoundsBySessionId(t),r=[];for(let S of s){let g=yield this.getShotsByRoundId(S.id);r.push(...g)}return r})}addShot(t){return n(this,null,function*(){return yield o.shots.add(t)})}addMultipleShots(t){return n(this,null,function*(){return yield o.shots.bulkAdd(t)})}deleteShot(t){return n(this,null,function*(){return yield o.shots.delete(t)})}updateShot(t,s){return n(this,null,function*(){return yield o.shots.update(t,s)})}addShotsForRound(t,s){return n(this,null,function*(){o.transaction("rw",o.sessions,o.rounds,o.shots,()=>n(this,null,function*(){yield o.shots.where({roundId:t}).delete(),yield o.shots.bulkAdd(s);let r=yield o.rounds.get(t),S=yield o.sessions.where({id:r.sessionId}).first();yield this.updateRound(t,{countsTowardsStats:B(s.length===S.arrowCount)})}))})}getAllShotsFromValidRoundsBySessionId(t){return n(this,null,function*(){let s=yield o.rounds.where({sessionId:t,countsTowardsStats:m.TRUE}).toArray(),r=[];for(let S of s){let g=yield this.getShotsByRoundId(S.id);r.push(...g)}return r})}static{this.\u0275fac=function(s){return new(s||e)}}static{this.\u0275prov=_({token:e,factory:e.\u0275fac,providedIn:"root"})}}return e})();export{B as a,k as b,I as c,x as d,i as e,H as f,Z as g};
