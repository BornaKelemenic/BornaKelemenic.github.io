import{t as E}from"./chunk-IXNTDOOL.js";import{c as f,e as o}from"./chunk-CMCV5GXG.js";import{O as v,j as w,m}from"./chunk-VK2UWGYB.js";import{a as A,b as F,f as a}from"./chunk-EQDQRRRY.js";var y=function(e){return e[e.FALSE=0]="FALSE",e[e.TRUE=1]="TRUE",e}(y||{});function _(e){return e?y.TRUE:y.FALSE}function M(e){return!!e}function R(e){return e.reduce((I,t)=>I+t,0)}function x(e){return e.length?e.reduce((I,t)=>I+t,0)/e.length:0}var i=function(e){return e.OLDEST_FIRST="oldest_first",e.NEWEST_FIRST="newest_first",e.HIGHEST_SUM="highest_sum",e.LOWEST_SUM="lowest_sum",e.HIGHEST_AVERAGE="highest_average",e.LOWEST_AVERAGE="lowest_average",e}(i||{}),k=new Map([[i.NEWEST_FIRST,"session.sortOptions.newestFirst"],[i.OLDEST_FIRST,"session.sortOptions.oldestFirst"],[i.HIGHEST_SUM,"session.sortOptions.highestTotalFirst"],[i.LOWEST_SUM,"session.sortOptions.lowestTotalFirst"],[i.HIGHEST_AVERAGE,"session.sortOptions.highestAverageFirst"],[i.LOWEST_AVERAGE,"session.sortOptions.lowestAverageFirst"]]);var K=(()=>{class e{constructor(){this.sessions$=w(f(()=>o.sessions.orderBy("date").reverse().toArray()))}getFilteredSessions(t){return w(f(()=>a(this,null,function*(){let s=[];switch(t.sortBy){case i.NEWEST_FIRST:{s=yield o.sessions.orderBy("date").reverse().toArray();break}case i.OLDEST_FIRST:{s=yield o.sessions.orderBy("date").toArray();break}case i.HIGHEST_SUM:case i.LOWEST_SUM:case i.HIGHEST_AVERAGE:case i.LOWEST_AVERAGE:{s=yield o.sessions.toArray();let r=new Map;for(let d of s){let u=0,c=0,S=0,l=yield this.getAllShotsFromValidRoundsBySessionId(d.id),h=l.map(T=>T.value);u=R(h),S=x(h),c=l.map(T=>T.isX).filter(T=>!!T).length,r.set(d.id,{scoreTotal:u,xCount:c,avg:S})}t.sortBy===i.HIGHEST_SUM?s=s.sort((d,u)=>{let c=r.get(d.id).scoreTotal,S=r.get(d.id).xCount,l=r.get(u.id).scoreTotal,h=r.get(u.id).xCount;return c===l?h-S:l-c}):t.sortBy===i.LOWEST_SUM?s=s.sort((d,u)=>{let c=r.get(d.id).scoreTotal,S=r.get(d.id).xCount,l=r.get(u.id).scoreTotal,h=r.get(u.id).xCount;return c===l?S-h:c-l}):t.sortBy===i.HIGHEST_AVERAGE?s=s.sort((d,u)=>{let c=r.get(d.id).avg,S=r.get(d.id).xCount,l=r.get(u.id).avg,h=r.get(u.id).xCount;return c===l?h-S:l-c}):t.sortBy===i.LOWEST_AVERAGE&&(s=s.sort((d,u)=>{let c=r.get(d.id).avg,S=r.get(d.id).xCount,l=r.get(u.id).avg,h=r.get(u.id).xCount;return c===l?S-h:c-l}));break}default:s=yield o.sessions.toArray();break}let n=t.shootingType;E(n)&&(s=s.filter(r=>r.shootingType===n));let p=t.targetFace;E(p)&&(s=s.filter(r=>r.targetFace===p));let g=t.distance;E(g)&&g>0&&(s=s.filter(r=>r.distance===g));let B=t.bowType;return E(B)&&(s=s.filter(r=>r.bowType===B)),s})))}getAverageScoreBySessionID$(t){return w(f(()=>this.getAllShotsFromValidRoundsBySessionId(t))).pipe(m(s=>s.map(n=>n.value)),m(s=>x(s).toFixed(2)))}getTotalScoreBySessionID$(t){return w(f(()=>this.getAllShotsFromValidRoundsBySessionId(t))).pipe(m(s=>R(s.map(n=>n.value))))}getXCountBySessionID$(t){return w(f(()=>this.getAllShotsFromValidRoundsBySessionId(t))).pipe(m(s=>s.map(n=>n.isX).filter(n=>!!n)),m(s=>s.length))}addSession(t){return a(this,null,function*(){return yield o.sessions.add(F(A({},t),{date:new Date().toISOString(),locked:y.FALSE}))})}deleteSession(t){return a(this,null,function*(){return yield o.transaction("rw",o.sessions,o.rounds,o.shots,()=>a(this,null,function*(){let s=yield this.getRoundsBySessionId(t);for(let n of s){let p=yield this.getShotsByRoundId(n.id);yield o.shots.bulkDelete(p.map(g=>g.id))}yield o.rounds.bulkDelete(s.map(n=>n.id)),yield o.sessions.delete(t)}))})}getSessionById(t){return a(this,null,function*(){return yield o.sessions.get(t)})}updateSession(t,s){return a(this,null,function*(){return yield o.sessions.update(t,A({},s))})}getLatestSession(){return a(this,null,function*(){return yield o.sessions.orderBy("date").reverse().first()})}getRoundsBySessionId(t){return a(this,null,function*(){return yield o.rounds.where({sessionId:t}).toArray()})}getRoundsCountBySessionId(t){return a(this,null,function*(){return yield o.rounds.where({sessionId:t}).count()})}addRound(t){return a(this,null,function*(){return o.rounds.add(t)})}updateRound(t,s){return a(this,null,function*(){return yield o.rounds.update(t,A({},s))})}deleteRound(t){return a(this,null,function*(){return yield o.transaction("rw",o.rounds,o.shots,()=>a(this,null,function*(){let s=yield this.getShotsByRoundId(t);yield o.shots.bulkDelete(s.map(n=>n.id)),yield o.rounds.delete(t)}))})}getShotsByRoundId(t){return a(this,null,function*(){return yield o.shots.where({roundId:t}).toArray()})}getAllShotsBySessionId(t){return a(this,null,function*(){let s=yield this.getRoundsBySessionId(t),n=[];for(let p of s){let g=yield this.getShotsByRoundId(p.id);n.push(...g)}return n})}addShot(t){return a(this,null,function*(){return yield o.shots.add(t)})}addMultipleShots(t){return a(this,null,function*(){return yield o.shots.bulkAdd(t)})}deleteShot(t){return a(this,null,function*(){return yield o.shots.delete(t)})}updateShot(t,s){return a(this,null,function*(){return yield o.shots.update(t,s)})}addShotsForRound(t,s){return a(this,null,function*(){o.transaction("rw",o.sessions,o.rounds,o.shots,()=>a(this,null,function*(){yield o.shots.where({roundId:t}).delete(),yield o.shots.bulkAdd(s);let n=yield o.rounds.get(t),p=yield o.sessions.where({id:n.sessionId}).first();yield this.updateRound(t,{countsTowardsStats:_(s.length===p.arrowCount)})}))})}getAllShotsFromValidRoundsBySessionId(t){return a(this,null,function*(){let s=yield o.rounds.where({sessionId:t,countsTowardsStats:y.TRUE}).toArray(),n=[];for(let p of s){let g=yield this.getShotsByRoundId(p.id);n.push(...g)}return n})}static{this.\u0275fac=function(s){return new(s||e)}}static{this.\u0275prov=v({token:e,factory:e.\u0275fac,providedIn:"root"})}}return e})();export{_ as a,M as b,R as c,x as d,i as e,k as f,K as g};
